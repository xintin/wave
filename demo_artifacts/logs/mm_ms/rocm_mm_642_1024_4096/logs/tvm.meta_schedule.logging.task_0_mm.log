2025-10-02 01:05:36 [INFO] [task_scheduler.cc:160] Initializing Task #0: "mm"
2025-10-02 01:05:36 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((642, 4096), "float16"), B: T.Buffer((4096, 1024), "float16"), C: T.Buffer((642, 1024), "float16")):
        T.func_attr({"global_symbol": "mm", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        for i, j, k in T.grid(642, 1024, 4096):
            with T.block("C"):
                v_i, v_j, v_k = T.axis.remap("SSR", [i, j, k])
                T.reads(A[v_i, v_k], B[v_k, v_j])
                T.writes(C[v_i, v_j])
                with T.init():
                    C[v_i, v_j] = T.float16(0.0)
                C[v_i, v_j] = C[v_i, v_j] + A[v_i, v_k] * B[v_k, v_j]
2025-10-02 01:05:36 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2025-10-02 01:05:36 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((642, 4096), "float16"), B: T.Buffer((4096, 1024), "float16"), C: T.Buffer((642, 1024), "float16")):
        T.func_attr({"global_symbol": "mm", "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            C_local = T.alloc_buffer((642, 1024), "float16", scope="local")
            A_shared = T.alloc_buffer((642, 4096), "float16", scope="shared")
            B_shared = T.alloc_buffer((4096, 1024), "float16", scope="shared")
            for i_0_j_0_fused in T.thread_binding(48, thread="blockIdx.x"):
                for i_1_j_1_fused in T.thread_binding(2, thread="vthread.x"):
                    for i_2_j_2_fused in T.thread_binding(8, thread="threadIdx.x"):
                        for k_0 in range(1):
                            for ax0_ax1_fused in range(876544):
                                with T.block("A_shared"):
                                    v0 = T.axis.spatial(642, i_0_j_0_fused // 16 * 214 + ax0_ax1_fused // 4096)
                                    v1 = T.axis.spatial(4096, ax0_ax1_fused % 4096)
                                    T.reads(A[v0, v1])
                                    T.writes(A_shared[v0, v1])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    A_shared[v0, v1] = A[v0, v1]
                            for ax0_ax1_fused in range(262144):
                                with T.block("B_shared"):
                                    v0 = T.axis.spatial(4096, ax0_ax1_fused // 64)
                                    v1 = T.axis.spatial(1024, i_0_j_0_fused % 16 * 64 + ax0_ax1_fused % 64)
                                    T.reads(B[v0, v1])
                                    T.writes(B_shared[v0, v1])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 8})
                                    B_shared[v0, v1] = B[v0, v1]
                            for k_1, i_3, j_3, k_2, i_4, j_4 in T.grid(1024, 214, 4, 4, 1, 1):
                                with T.block("C"):
                                    v_i = T.axis.spatial(642, i_0_j_0_fused // 16 * 214 + i_3 + i_4)
                                    v_j = T.axis.spatial(1024, i_0_j_0_fused % 16 * 64 + i_1_j_1_fused * 32 + i_2_j_2_fused * 4 + j_3 + j_4)
                                    v_k = T.axis.reduce(4096, k_0 * 4096 + k_1 * 4 + k_2)
                                    T.reads(A_shared[v_i, v_k], B_shared[v_k, v_j])
                                    T.writes(C_local[v_i, v_j])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 64, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        C_local[v_i, v_j] = T.float16(0.0)
                                    C_local[v_i, v_j] = C_local[v_i, v_j] + A_shared[v_i, v_k] * B_shared[v_k, v_j]
                        for ax0, ax1 in T.grid(214, 4):
                            with T.block("C_local"):
                                v0 = T.axis.spatial(642, i_0_j_0_fused // 16 * 214 + ax0)
                                v1 = T.axis.spatial(1024, i_0_j_0_fused % 16 * 64 + i_1_j_1_fused * 32 + i_2_j_2_fused * 4 + ax1)
                                T.reads(C_local[v0, v1])
                                T.writes(C[v0, v1])
                                C[v0, v1] = C_local[v0, v1]
b0 = sch.get_block(name="C", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l2, l3, l4 = sch.get_loops(block=b0)
v5, v6, v7, v8, v9 = sch.sample_perfect_tile(loop=l2, n=5, max_innermost_factor=64, decision=[3, 1, 1, 214, 1])
l10, l11, l12, l13, l14 = sch.split(loop=l2, factors=[v5, v6, v7, v8, v9], preserve_unit_iters=True, disable_predication=False)
v15, v16, v17, v18, v19 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[16, 2, 8, 4, 1])
l20, l21, l22, l23, l24 = sch.split(loop=l3, factors=[v15, v16, v17, v18, v19], preserve_unit_iters=True, disable_predication=False)
v25, v26, v27 = sch.sample_perfect_tile(loop=l4, n=3, max_innermost_factor=64, decision=[1, 1024, 4])
l28, l29, l30 = sch.split(loop=l4, factors=[v25, v26, v27], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l10, l20, l11, l21, l12, l22, l28, l29, l13, l23, l30, l14, l24)
l31 = sch.fuse(l10, l20, preserve_unit_iters=True)
sch.bind(loop=l31, thread_axis="blockIdx.x")
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="vthread.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=64)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b34 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b34, loop=l33, preserve_unit_loops=True, index=-1)
b35 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b35, loop=l28, preserve_unit_loops=True, index=-1)
l36, l37, l38, l39, l40, l41 = sch.get_loops(block=b35)
l42 = sch.fuse(l40, l41, preserve_unit_iters=True)
v43 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b35, ann_key="meta_schedule.cooperative_fetch", ann_val=v43)
b44 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b44, loop=l28, preserve_unit_loops=True, index=-1)
l45, l46, l47, l48, l49, l50 = sch.get_loops(block=b44)
l51 = sch.fuse(l49, l50, preserve_unit_iters=True)
v52 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b44, ann_key="meta_schedule.cooperative_fetch", ann_val=v52)
v53 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v53)
2025-10-02 01:05:36 [INFO] [evolutionary_search.cc:713] Generating candidates......
2025-10-02 01:05:36 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2025-10-02 01:05:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57a6a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x589ebc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x589eb98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x57d9318)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x586dd18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5887d78)]: 480 failure(s)
2025-10-02 01:05:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57a6a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x589ebc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x589eb98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x57d9318)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x586dd18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5887d78)]: 963 failure(s)
2025-10-02 01:05:38 [INFO] [evolutionary_search.cc:723] Sampled 61 candidate(s)
2025-10-02 01:05:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57a6a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x589ebc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x589eb98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x57d9318)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x586dd18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5887d78)]: 83 failure(s)
2025-10-02 01:05:42 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57a6a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x589ebc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x589eb98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x57d9318)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x586dd18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5887d78)]: 92 failure(s)
2025-10-02 01:05:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57a6a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x589ebc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x589eb98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x57d9318)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x586dd18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5887d78)]: 78 failure(s)
2025-10-02 01:05:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57a6a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x589ebc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x589eb98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x57d9318)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x586dd18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5887d78)]: 93 failure(s)
2025-10-02 01:05:46 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9995  0.9994  0.9986  0.9982  0.9950  0.9950  0.9937  0.9931  0.9905  0.9854  0.9847  0.9841  0.9825  0.9812  0.9806  0.9794
[17 : 32]:	0.9792  0.9789  0.9780  0.9774  0.9773  0.9771  0.9736  0.9716  0.9709  0.9709  0.9696  0.9696  0.9686  0.9680  0.9676  0.9676
[33 : 48]:	0.9672  0.9671  0.9666  0.9662  0.9661  0.9658  0.9653  0.9645  0.9635  0.9626  0.9618  0.9617  0.9615  0.9611  0.9605  0.9599
[49 : 64]:	0.9594  0.9594  0.9589  0.9585  0.9581  0.9581  0.9576  0.9575  0.9570  0.9569  0.9567  0.9566  0.9546  0.9544  0.9542  0.9539
2025-10-02 01:05:46 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2025-10-02 01:05:46 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #1: GFLOPs: 54.2978. Time: 99184.3157 us. Best GFLOPs: 54.2978
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #2: GFLOPs: 278.2600. Time: 19354.1552 us. Best GFLOPs: 278.2600
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #3: GFLOPs: 85.4939. Time: 62992.6093 us. Best GFLOPs: 278.2600
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #4: GFLOPs: 77.1404. Time: 69814.0563 us. Best GFLOPs: 278.2600
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #5: GFLOPs: 7830.1468. Time: 687.7887 us. Best GFLOPs: 7830.1468
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #6: GFLOPs: 14117.2241. Time: 381.4834 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #7: GFLOPs: 9488.9287. Time: 567.5547 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #8: GFLOPs: 16.7442. Time: 321632.1613 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #9: GFLOPs: 4410.6118. Time: 1221.0293 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #10: GFLOPs: 5581.1723. Time: 964.9382 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #11: GFLOPs: 7.9993. Time: 673245.2797 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #12: GFLOPs: 10.1667. Time: 529716.8373 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #13: GFLOPs: 145.3659. Time: 37047.8030 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #14: GFLOPs: 3412.5217. Time: 1578.1544 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #15: GFLOPs: 3877.7173. Time: 1388.8290 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #16: GFLOPs: 29.5059. Time: 182522.5420 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #17: GFLOPs: 27.9731. Time: 192523.6000 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #18: GFLOPs: 167.6942. Time: 32114.9137 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:121] [Task #0: mm] Trial #19: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((642, 4096), "float16"), B: T.Buffer((4096, 1024), "float16"), C: T.Buffer((642, 1024), "float16")):
        T.func_attr({"global_symbol": "mm", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_local = T.alloc_buffer((642, 1024), "float16", scope="local")
        A_shared = T.alloc_buffer((642, 4096), "float16", scope="shared")
        B_shared = T.alloc_buffer((4096, 1024), "float16", scope="shared")
        for i_0_j_0_fused in T.thread_binding(2, thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for i_1_j_1_fused in T.thread_binding(107, thread="vthread.x"):
                for i_2_j_2_fused in T.thread_binding(128, thread="threadIdx.x"):
                    for i_3_init, j_3_init, i_4_init, j_4_init in T.grid(1, 1, 3, 8):
                        with T.block("C_init"):
                            v_i = T.axis.spatial(642, i_1_j_1_fused * 6 + i_2_j_2_fused // 64 * 3 + i_3_init * 3 + i_4_init)
                            v_j = T.axis.spatial(1024, i_0_j_0_fused * 512 + i_2_j_2_fused % 64 * 8 + j_3_init * 8 + j_4_init)
                            T.reads()
                            T.writes(C_local[v_i, v_j])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 64, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            C_local[v_i, v_j] = T.float16(0.0)
                    for k_0 in range(1024):
                        for ax0_ax1_fused_0 in range(3):
                            for ax0_ax1_fused_1 in T.thread_binding(128, thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(8):
                                    with T.block("A_shared"):
                                        v0 = T.axis.spatial(642, (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 8 + ax0_ax1_fused_2) // 4)
                                        v1 = T.axis.spatial(4096, k_0 * 4 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 8 + ax0_ax1_fused_2) % 4)
                                        T.where((ax0_ax1_fused_0 * 128 + ax0_ax1_fused_1) * 8 + ax0_ax1_fused_2 < 2568)
                                        T.reads(A[v0, v1])
                                        T.writes(A_shared[v0, v1])
                                        A_shared[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(2):
                            for ax0_ax1_fused_1 in T.thread_binding(128, thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(8):
                                    with T.block("B_shared"):
                                        v0 = T.axis.spatial(4096, k_0 * 4 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 8 + ax0_ax1_fused_2) // 512)
                                        v1 = T.axis.spatial(1024, i_0_j_0_fused * 512 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 8 + ax0_ax1_fused_2) % 512)
                                        T.reads(B[v0, v1])
                                        T.writes(B_shared[v0, v1])
                                        B_shared[v0, v1] = B[v0, v1]
                        for k_1, i_3, j_3, k_2, i_4, j_4 in T.grid(4, 1, 1, 1, 3, 8):
                            with T.block("C_update"):
                                v_i = T.axis.spatial(642, i_1_j_1_fused * 6 + i_2_j_2_fused // 64 * 3 + i_3 * 3 + i_4)
                                v_j = T.axis.spatial(1024, i_0_j_0_fused * 512 + i_2_j_2_fused % 64 * 8 + j_3 * 8 + j_4)
                                v_k = T.axis.reduce(4096, k_0 * 4 + k_1 + k_2)
                                T.reads(C_local[v_i, v_j], A_shared[v_i, v_k], B_shared[v_k, v_j])
                                T.writes(C_local[v_i, v_j])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 64, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                C_local[v_i, v_j] = C_local[v_i, v_j] + A_shared[v_i, v_k] * B_shared[v_k, v_j]
                    for ax0, ax1 in T.grid(3, 8):
                        with T.block("C_local"):
                            v0 = T.axis.spatial(642, i_1_j_1_fused * 6 + i_2_j_2_fused // 64 * 3 + ax0)
                            v1 = T.axis.spatial(1024, i_0_j_0_fused * 512 + i_2_j_2_fused % 64 * 8 + ax1)
                            T.reads(C_local[v0, v1])
                            T.writes(C[v0, v1])
                            C[v0, v1] = C_local[v0, v1]
b0 = sch.get_block(name="C", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l2, l3, l4 = sch.get_loops(block=b0)
v5, v6, v7, v8, v9 = sch.sample_perfect_tile(loop=l2, n=5, max_innermost_factor=64, decision=[1, 107, 2, 1, 3])
l10, l11, l12, l13, l14 = sch.split(loop=l2, factors=[v5, v6, v7, v8, v9], preserve_unit_iters=True, disable_predication=False)
v15, v16, v17, v18, v19 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[2, 1, 64, 1, 8])
l20, l21, l22, l23, l24 = sch.split(loop=l3, factors=[v15, v16, v17, v18, v19], preserve_unit_iters=True, disable_predication=False)
v25, v26, v27 = sch.sample_perfect_tile(loop=l4, n=3, max_innermost_factor=64, decision=[1024, 4, 1])
l28, l29, l30 = sch.split(loop=l4, factors=[v25, v26, v27], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l10, l20, l11, l21, l12, l22, l28, l29, l13, l23, l30, l14, l24)
l31 = sch.fuse(l10, l20, preserve_unit_iters=True)
sch.bind(loop=l31, thread_axis="blockIdx.x")
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="vthread.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=64)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b34 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b34, loop=l33, preserve_unit_loops=True, index=-1)
b35 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b35, loop=l28, preserve_unit_loops=True, index=-1)
l36, l37, l38, l39, l40, l41 = sch.get_loops(block=b35)
l42 = sch.fuse(l40, l41, preserve_unit_iters=True)
v43 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b35, ann_key="meta_schedule.cooperative_fetch", ann_val=v43)
b44 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b44, loop=l28, preserve_unit_loops=True, index=-1)
l45, l46, l47, l48, l49, l50 = sch.get_loops(block=b44)
l51 = sch.fuse(l49, l50, preserve_unit_iters=True)
v52 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b44, ann_key="meta_schedule.cooperative_fetch", ann_val=v52)
v53 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v53)
sch.enter_postproc()
sch.unannotate(block_or_loop=b35, ann_key="meta_schedule.cooperative_fetch")
l54, l55, l56, l57, l58 = sch.get_loops(block=b35)
l59, l60, l61 = sch.split(loop=l58, factors=[None, 128, 8], preserve_unit_iters=True, disable_predication=False)
sch.vectorize(loop=l61)
sch.bind(loop=l60, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b44, ann_key="meta_schedule.cooperative_fetch")
l62, l63, l64, l65, l66 = sch.get_loops(block=b44)
l67, l68, l69 = sch.split(loop=l66, factors=[None, 128, 8], preserve_unit_iters=True, disable_predication=False)
sch.vectorize(loop=l69)
sch.bind(loop=l68, thread_axis="threadIdx.x")
b70 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b70, ann_key="meta_schedule.unroll_explicit")
b71, b72, b73, b74 = sch.get_child_blocks(b70)
l75, l76, l77, l78, l79, l80, l81 = sch.get_loops(block=b71)
l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b72)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b73)
sch.annotate(block_or_loop=l89, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l89, ann_key="pragma_unroll_explicit", ann_val=1)
l99, l100, l101, l102, l103 = sch.get_loops(block=b74)
b104 = sch.get_block(name="C", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b104)
b115 = sch.decompose_reduction(block=b104, loop=l108)
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #20: GFLOPs: 2344.6226. Time: 2296.9523 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #21: GFLOPs: 368.2846. Time: 14623.1634 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #22: GFLOPs: 16.2951. Time: 330496.2970 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #23: GFLOPs: 4873.2430. Time: 1105.1134 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #24: GFLOPs: 29.7241. Time: 181182.4137 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #25: GFLOPs: 336.3101. Time: 16013.4549 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #26: GFLOPs: 7.7073. Time: 698754.8827 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #27: GFLOPs: 2175.6637. Time: 2475.3303 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #28: GFLOPs: 8.0007. Time: 673124.6743 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #29: GFLOPs: 6.2114. Time: 867038.5740 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #30: GFLOPs: 3836.4653. Time: 1403.7625 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #31: GFLOPs: 408.9755. Time: 13168.2366 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #32: GFLOPs: 1956.3984. Time: 2752.7554 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #33: GFLOPs: 125.8383. Time: 42796.8800 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #34: GFLOPs: 41.1084. Time: 131006.8560 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #35: GFLOPs: 6.3223. Time: 851830.4033 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #36: GFLOPs: 385.1866. Time: 13981.4986 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #37: GFLOPs: 3890.2093. Time: 1384.3693 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #38: GFLOPs: 6.4674. Time: 832715.6573 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #39: GFLOPs: 606.2737. Time: 8882.9294 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #40: GFLOPs: 7.5497. Time: 713339.2740 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #41: GFLOPs: 494.8657. Time: 10882.7224 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #42: GFLOPs: 8044.5030. Time: 669.4617 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #43: GFLOPs: 17.1593. Time: 313851.9693 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #44: GFLOPs: 1966.1153. Time: 2739.1508 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #45: GFLOPs: 3745.3194. Time: 1437.9245 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #46: GFLOPs: 30.7086. Time: 175373.9013 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #47: GFLOPs: 4835.8992. Time: 1113.6473 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #48: GFLOPs: 4775.3124. Time: 1127.7768 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:121] [Task #0: mm] Trial #49: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((642, 4096), "float16"), B: T.Buffer((4096, 1024), "float16"), C: T.Buffer((642, 1024), "float16")):
        T.func_attr({"global_symbol": "mm", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_local = T.alloc_buffer((642, 1024), "float16", scope="local")
        A_shared = T.alloc_buffer((642, 4096), "float16", scope="shared")
        B_shared = T.alloc_buffer((4096, 1024), "float16", scope="shared")
        for i_0_j_0_fused in T.thread_binding(1, thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for i_1_j_1_fused in T.thread_binding(384, thread="vthread.x"):
                for i_2_j_2_fused in T.thread_binding(428, thread="threadIdx.x"):
                    for i_3_init, j_3_init, i_4_init, j_4_init in T.grid(1, 1, 2, 2):
                        with T.block("C_init"):
                            v_i = T.axis.spatial(642, i_1_j_1_fused // 128 * 214 + i_2_j_2_fused // 4 * 2 + i_3_init * 2 + i_4_init)
                            v_j = T.axis.spatial(1024, i_1_j_1_fused % 128 * 8 + i_2_j_2_fused % 4 * 2 + j_3_init * 2 + j_4_init)
                            T.reads()
                            T.writes(C_local[v_i, v_j])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 64, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            C_local[v_i, v_j] = T.float16(0.0)
                    for k_0 in range(1024):
                        for ax0_ax1_fused_0 in range(2):
                            for ax0_ax1_fused_1 in T.thread_binding(428, thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(4):
                                    with T.block("A_shared"):
                                        v0 = T.axis.spatial(642, (ax0_ax1_fused_0 * 1712 + ax0_ax1_fused_1 * 4 + ax0_ax1_fused_2) // 4)
                                        v1 = T.axis.spatial(4096, k_0 * 4 + (ax0_ax1_fused_0 * 1712 + ax0_ax1_fused_1 * 4 + ax0_ax1_fused_2) % 4)
                                        T.where((ax0_ax1_fused_0 * 428 + ax0_ax1_fused_1) * 4 + ax0_ax1_fused_2 < 2568)
                                        T.reads(A[v0, v1])
                                        T.writes(A_shared[v0, v1])
                                        A_shared[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(2):
                            for ax0_ax1_fused_1 in T.thread_binding(428, thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(8):
                                    with T.block("B_shared"):
                                        v0 = T.axis.spatial(4096, k_0 * 4 + (ax0_ax1_fused_0 * 3424 + ax0_ax1_fused_1 * 8 + ax0_ax1_fused_2) // 1024)
                                        v1 = T.axis.spatial(1024, (ax0_ax1_fused_0 * 3424 + ax0_ax1_fused_1 * 8 + ax0_ax1_fused_2) % 1024)
                                        T.where((ax0_ax1_fused_0 * 428 + ax0_ax1_fused_1) * 8 + ax0_ax1_fused_2 < 4096)
                                        T.reads(B[v0, v1])
                                        T.writes(B_shared[v0, v1])
                                        B_shared[v0, v1] = B[v0, v1]
                        for k_1, i_3, j_3, k_2, i_4, j_4 in T.grid(4, 1, 1, 1, 2, 2):
                            with T.block("C_update"):
                                v_i = T.axis.spatial(642, i_1_j_1_fused // 128 * 214 + i_2_j_2_fused // 4 * 2 + i_3 * 2 + i_4)
                                v_j = T.axis.spatial(1024, i_1_j_1_fused % 128 * 8 + i_2_j_2_fused % 4 * 2 + j_3 * 2 + j_4)
                                v_k = T.axis.reduce(4096, k_0 * 4 + k_1 + k_2)
                                T.reads(C_local[v_i, v_j], A_shared[v_i, v_k], B_shared[v_k, v_j])
                                T.writes(C_local[v_i, v_j])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 64, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                C_local[v_i, v_j] = C_local[v_i, v_j] + A_shared[v_i, v_k] * B_shared[v_k, v_j]
                    for ax0, ax1 in T.grid(2, 2):
                        with T.block("C_local"):
                            v0 = T.axis.spatial(642, i_1_j_1_fused // 128 * 214 + i_2_j_2_fused // 4 * 2 + ax0)
                            v1 = T.axis.spatial(1024, i_1_j_1_fused % 128 * 8 + i_2_j_2_fused % 4 * 2 + ax1)
                            T.reads(C_local[v0, v1])
                            T.writes(C[v0, v1])
                            C[v0, v1] = C_local[v0, v1]
b0 = sch.get_block(name="C", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l2, l3, l4 = sch.get_loops(block=b0)
v5, v6, v7, v8, v9 = sch.sample_perfect_tile(loop=l2, n=5, max_innermost_factor=64, decision=[1, 3, 107, 1, 2])
l10, l11, l12, l13, l14 = sch.split(loop=l2, factors=[v5, v6, v7, v8, v9], preserve_unit_iters=True, disable_predication=False)
v15, v16, v17, v18, v19 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 128, 4, 1, 2])
l20, l21, l22, l23, l24 = sch.split(loop=l3, factors=[v15, v16, v17, v18, v19], preserve_unit_iters=True, disable_predication=False)
v25, v26, v27 = sch.sample_perfect_tile(loop=l4, n=3, max_innermost_factor=64, decision=[1024, 4, 1])
l28, l29, l30 = sch.split(loop=l4, factors=[v25, v26, v27], preserve_unit_iters=True, disable_predication=False)
sch.reorder(l10, l20, l11, l21, l12, l22, l28, l29, l13, l23, l30, l14, l24)
l31 = sch.fuse(l10, l20, preserve_unit_iters=True)
sch.bind(loop=l31, thread_axis="blockIdx.x")
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="vthread.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=64)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b34 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b34, loop=l33, preserve_unit_loops=True, index=-1)
b35 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b35, loop=l28, preserve_unit_loops=True, index=-1)
l36, l37, l38, l39, l40, l41 = sch.get_loops(block=b35)
l42 = sch.fuse(l40, l41, preserve_unit_iters=True)
v43 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b35, ann_key="meta_schedule.cooperative_fetch", ann_val=v43)
b44 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b44, loop=l28, preserve_unit_loops=True, index=-1)
l45, l46, l47, l48, l49, l50 = sch.get_loops(block=b44)
l51 = sch.fuse(l49, l50, preserve_unit_iters=True)
v52 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b44, ann_key="meta_schedule.cooperative_fetch", ann_val=v52)
v53 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v53)
sch.enter_postproc()
sch.unannotate(block_or_loop=b35, ann_key="meta_schedule.cooperative_fetch")
l54, l55, l56, l57, l58 = sch.get_loops(block=b35)
l59, l60, l61 = sch.split(loop=l58, factors=[None, 428, 4], preserve_unit_iters=True, disable_predication=False)
sch.vectorize(loop=l61)
sch.bind(loop=l60, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b44, ann_key="meta_schedule.cooperative_fetch")
l62, l63, l64, l65, l66 = sch.get_loops(block=b44)
l67, l68, l69 = sch.split(loop=l66, factors=[None, 428, 8], preserve_unit_iters=True, disable_predication=False)
sch.vectorize(loop=l69)
sch.bind(loop=l68, thread_axis="threadIdx.x")
b70 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b70, ann_key="meta_schedule.unroll_explicit")
b71, b72, b73, b74 = sch.get_child_blocks(b70)
l75, l76, l77, l78, l79, l80, l81 = sch.get_loops(block=b71)
l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b72)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b73)
sch.annotate(block_or_loop=l89, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l89, ann_key="pragma_unroll_explicit", ann_val=1)
l99, l100, l101, l102, l103 = sch.get_loops(block=b74)
b104 = sch.get_block(name="C", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b104)
b115 = sch.decompose_reduction(block=b104, loop=l108)
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #50: GFLOPs: 8.0123. Time: 672153.8083 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #51: GFLOPs: 27.9203. Time: 192887.5527 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #52: GFLOPs: 8.0017. Time: 673043.1720 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #53: GFLOPs: 163.0591. Time: 33027.8205 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #54: GFLOPs: 28.2313. Time: 190763.2037 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #55: GFLOPs: 92.4170. Time: 58273.7883 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #56: GFLOPs: 15.8339. Time: 340122.9857 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #57: GFLOPs: 852.0472. Time: 6320.6434 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #58: GFLOPs: 4597.8905. Time: 1171.2950 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #59: GFLOPs: 6849.6580. Time: 786.2416 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #60: GFLOPs: 14.7099. Time: 366112.4267 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #61: GFLOPs: 494.4714. Time: 10891.4001 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #62: GFLOPs: 3526.6131. Time: 1527.0987 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #63: GFLOPs: 196.9903. Time: 27338.8348 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #64: GFLOPs: 46.6954. Time: 115332.3057 us. Best GFLOPs: 14117.2241
2025-10-02 01:08:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2025-10-02 01:08:38 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2025-10-02 01:08:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57a6a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x589ebc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x589eb98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x57d9318)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x586dd18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5887d78)]: 422 failure(s)
2025-10-02 01:08:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57a6a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x589ebc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x589eb98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x57d9318)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x586dd18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5887d78)]: 847 failure(s)
2025-10-02 01:08:40 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2025-10-02 01:08:42 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57a6a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x589ebc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x589eb98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x57d9318)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x586dd18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5887d78)]: 79 failure(s)
2025-10-02 01:08:44 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57a6a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x589ebc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x589eb98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x57d9318)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x586dd18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5887d78)]: 87 failure(s)
2025-10-02 01:08:46 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57a6a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x589ebc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x589eb98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x57d9318)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x586dd18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5887d78)]: 87 failure(s)
2025-10-02 01:08:48 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57a6a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x589ebc8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x589eb98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x57d9318)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x586dd18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5887d78)]: 72 failure(s)
2025-10-02 01:08:49 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9999  0.9998  0.9998  0.9989  0.9988  0.9985  0.9980  0.9975  0.9940  0.9924  0.9917  0.9911  0.9908  0.9907  0.9900  0.9899
[17 : 32]:	0.9899  0.9883  0.9881  0.9873  0.9872  0.9865  0.9850  0.9847  0.9839  0.9819  0.9807  0.9804  0.9801  0.9796  0.9779  0.9778
[33 : 48]:	0.9755  0.9742  0.9740  0.9740  0.9735  0.9734  0.9733  0.9731  0.9726  0.9722  0.9716  0.9707  0.9706  0.9699  0.9680  0.9671
[49 : 64]:	0.9668  0.9667  0.9664  0.9658  0.9653  0.9642  0.9641  0.9637  0.9637  0.9625  0.9623  0.9617  0.9611  0.9610  0.9603  0.9602
2025-10-02 01:08:49 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2025-10-02 01:08:49 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #65: GFLOPs: 10.0103. Time: 537996.2157 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #66: GFLOPs: 78.4950. Time: 68609.2580 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #67: GFLOPs: 723.6056. Time: 7442.5719 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #68: GFLOPs: 61.9509. Time: 86931.4573 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #69: GFLOPs: 78.0983. Time: 68957.7483 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #70: GFLOPs: 13.3704. Time: 402792.3583 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #71: GFLOPs: 6.3797. Time: 844157.0637 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #72: GFLOPs: 13.1495. Time: 409557.8610 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #73: GFLOPs: 13.1191. Time: 410508.6667 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #74: GFLOPs: 385.2259. Time: 13980.0739 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #75: GFLOPs: 4433.5614. Time: 1214.7089 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #76: GFLOPs: 72.2647. Time: 74524.4750 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #77: GFLOPs: 29.9024. Time: 180102.1320 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #78: GFLOPs: 8.0077. Time: 672539.0217 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #79: GFLOPs: 65.5686. Time: 82135.1267 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #80: GFLOPs: 31.2123. Time: 172543.6197 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #81: GFLOPs: 12.8174. Time: 420170.6947 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #82: GFLOPs: 1303.9088. Time: 4130.2630 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #83: GFLOPs: 6986.5292. Time: 770.8386 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #84: GFLOPs: 4889.4340. Time: 1101.4539 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #85: GFLOPs: 6.4065. Time: 840624.8370 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #86: GFLOPs: 22.2984. Time: 241518.7377 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #87: GFLOPs: 26.2127. Time: 205453.4097 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #88: GFLOPs: 100.2253. Time: 53733.7900 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #89: GFLOPs: 1793.5773. Time: 3002.6508 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #90: GFLOPs: 239.8774. Time: 22450.9932 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #91: GFLOPs: 40.6532. Time: 132474.0193 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #92: GFLOPs: 893.1609. Time: 6029.6931 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #93: GFLOPs: 5013.1532. Time: 1074.2713 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #94: GFLOPs: 30.0366. Time: 179297.3630 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #95: GFLOPs: 38.5529. Time: 139690.9790 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #96: GFLOPs: 439.4513. Time: 12255.0252 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #97: GFLOPs: 4645.1462. Time: 1159.3793 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #98: GFLOPs: 5753.5358. Time: 936.0307 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #99: GFLOPs: 1074.9202. Time: 5010.1265 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #100: GFLOPs: 4395.3989. Time: 1225.2554 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #101: GFLOPs: 4889.4098. Time: 1101.4594 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #102: GFLOPs: 6439.6915. Time: 836.2957 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #103: GFLOPs: 8325.9109. Time: 646.8345 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #104: GFLOPs: 3470.5002. Time: 1551.7897 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #105: GFLOPs: 10.2458. Time: 525628.7840 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #106: GFLOPs: 48.9733. Time: 109967.7327 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #107: GFLOPs: 11.4209. Time: 471548.0140 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #108: GFLOPs: 7.8699. Time: 684312.7440 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #109: GFLOPs: 11.1835. Time: 481554.9313 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #110: GFLOPs: 180.7078. Time: 29802.1715 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #111: GFLOPs: 3967.2279. Time: 1357.4936 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #112: GFLOPs: 1015.1240. Time: 5305.2496 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #113: GFLOPs: 3862.9912. Time: 1394.1234 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #114: GFLOPs: 3938.0411. Time: 1367.5546 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #115: GFLOPs: 7.4664. Time: 721298.4210 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #116: GFLOPs: 4057.7532. Time: 1327.2089 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #117: GFLOPs: 16.3035. Time: 330327.4330 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #118: GFLOPs: 6812.9851. Time: 790.4738 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #119: GFLOPs: 6486.3329. Time: 830.2821 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #120: GFLOPs: 29.9691. Time: 179701.5990 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #121: GFLOPs: 168.6870. Time: 31925.9032 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #122: GFLOPs: 10.1615. Time: 529989.5423 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #123: GFLOPs: 2574.9385. Time: 2091.5009 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #124: GFLOPs: 4386.5977. Time: 1227.7138 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #125: GFLOPs: 6953.8246. Time: 774.4639 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #126: GFLOPs: 32.2191. Time: 167151.7637 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #127: GFLOPs: 14.5226. Time: 370834.9200 us. Best GFLOPs: 14117.2241
2025-10-02 01:11:35 [INFO] [task_scheduler.cc:131] [Task #0: mm] Trial #128: GFLOPs: 24.9635. Time: 215734.2120 us. Best GFLOPs: 14117.2241
